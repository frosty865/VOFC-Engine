import { NextResponse } from 'next/server';

export async function POST(request) {
  try {
    const { vulnerabilityText } = await request.json();
    
    // Send analysis instruction to Ollama server
    const ollamaResponse = await fetch('http://10.0.0.213:11434/api/chat', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'vofc-engine:latest',
        messages: [{
          role: 'user',
          content: `Analyze this vulnerability and provide detailed insights:

${vulnerabilityText}

Return analysis in JSON format with:
- severity_level
- impact_assessment
- root_causes
- affected_systems
- mitigation_priority`
        }],
        stream: false
      })
    });

    if (!ollamaResponse.ok) {
      throw new Error(`Ollama server error: ${ollamaResponse.status}`);
    }

    const result = await ollamaResponse.json();
    return NextResponse.json({
      success: true,
      analysis: result.message?.content || result.response,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    console.error('Analyze Vulnerability Error:', error.message);
    return NextResponse.json({ error: error.message }, { status: 500 });
  }
}
